---
interface Props {
    name: string
    url: string
    isBig?: boolean
}
interface Types {
  slot: number
  type: {
    name: string,
    url: string
  }
} 

const {name, url, isBig = false} = Astro.props as Props

const idPkm = url.split('/').at(-2);

const urlPkmImage = "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/" + idPkm + ".png"

const responsePkem = await fetch("https://pokeapi.co/api/v2/pokemon/" + idPkm + "/")

const { types, weight, height } = await responsePkem.json();

const formatPokemonId = (idPkm:string) => `#${String(idPkm).padStart(3, '0')}`;


const nameTypes = types.map((item:Types) => item.type.name)

const colors:Record<string, string>= {
  normal: 'bg-gray-500/20',
  flying: 'bg-blue-500/20',
  fire: 'bg-red-500/20',
  water: 'bg-blue-400/20',
  grass: 'bg-green-500/20',
  electric: 'bg-yellow-500/20',
  ice: 'bg-cyan-500/20',
  fighting: 'bg-red-600/20',
  poison: 'bg-purple-500/20',
  ground: 'bg-amber-700/20',
  psychic: 'bg-pink-500/20',
  bug: 'bg-lime-500/20',
  rock: 'bg-stone-500/20',
  ghost: 'bg-indigo-500/20',
  dragon: 'bg-violet-600/20',
  dark: 'bg-zinc-800/20',
  steel: 'bg-slate-400/20',
  fairy: 'bg-pink-300/20'
};
const textColors: Record<string, string> = {
  normal: 'text-gray-500',
  flying: 'text-blue-500',
  fire: 'text-red-500',
  water: 'text-blue-400',
  grass: 'text-green-500',
  electric: 'text-yellow-500',
  ice: 'text-cyan-500',
  fighting: 'text-red-600',
  poison: 'text-purple-500',
  ground: 'text-amber-700',
  psychic: 'text-pink-500',
  bug: 'text-lime-500',
  rock: 'text-stone-500',
  ghost: 'text-indigo-500',
  dragon: 'text-violet-600',
  dark: 'text-zinc-800',
  steel: 'text-slate-400',
  fairy: 'text-pink-300'
};
---

<div class="max-w-sm mx-auto bg-gradient-to-b from-gray-800 to-gray-900 rounded-xl overflow-hidden shadow-2xl hover:shadow-indigo-500/20 transition-all duration-300 hover:-translate-y-1">
    <div class="relative p-6">
      <div class="absolute top-1/2 right-4 w-32 h-32 bg-green-500/10 rounded-full blur-2xl"></div>
      
      <div class="flex items-center justify-between mb-4">
        <h2 class={`text-2xl font-bold ${textColors[nameTypes[0]]} capitalize`}>{name}</h2>
        <span class={`${textColors[nameTypes[0]]} font-mono text-sm`}>{formatPokemonId(idPkm!!)}</span>
      </div>

      <div class="flex gap-2 mb-4">
        {
          nameTypes.map((name:string) => (
            <span class={`px-3 py-1 text-sm font-medium text-white ${colors[name]} rounded-full capitalize`}>
              {name}
          </span>
          ))
        }
      </div>

      <div class="relative">

        <a href={`/pokemons/${name}`}>
            <img 
              src={urlPkmImage}
              alt={name}
              class:list={[
                "relative w-full object-contain",
                isBig ? "transform transition-all duration-300 hover:scale-110 hover:rotate-12" : "transform hover:scale-105 transition-transform duration-300"
              ]}
              loading="lazy"
            />
        </a>
      </div>

      <div class="mt-4 grid grid-cols-2 gap-4">
        <div class="text-center p-2 rounded-lg bg-gray-700/50">
          <p class="text-gray-400 text-sm">Weight</p>
          <p class="text-white font-medium">{weight} kg</p>
        </div>
        <div class="text-center p-2 rounded-lg bg-gray-700/50">
          <p class="text-gray-400 text-sm">Height</p>
          <p class="text-white font-medium">{height} 0.7 m</p>
        </div>
      </div>

    </div>
  </div>